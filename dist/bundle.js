(()=>{function e(e){const t=(new TextEncoder).encode(e);return btoa(String.fromCharCode(...t))}function t(e){fetch("https://api.github.com/user/repos",{headers:{Authorization:`token ${e}`}}).then((e=>e.json())).then((e=>{const t=document.getElementById("repoList");let n="";chrome.storage.local.get(["ownerName"],(function(e){e.ownerName&&(n=e.ownerName)})),t.innerHTML="",e.length>0?e.forEach((e=>{const r=document.createElement("li");r.setAttribute("class","extension-li"),r.textContent=e.name,r.addEventListener("click",(function(){chrome.storage.local.set({selectedRepo:e.name},(function(){o(e.name,n),document.getElementById("ownerSection").style.display="flex",document.getElementById("postSection").style.display="flex"}))})),t.appendChild(r)})):t.innerHTML="Your repository not exist!! Please make your own.",document.getElementById("repoSection").style.display="flex"}))}function o(e,t){document.getElementById("repoSection").style.display="none",document.getElementById("ownerSection").style.display="flex",document.getElementById("selectedRepoSpan").innerHTML=`<a href="https://www.github.com/${t}/${e}" target="_blank" class="highlighted">${e}</a>`}document.addEventListener("DOMContentLoaded",(function(){chrome.storage.local.get(["githubToken","selectedRepo","ownerName"],(function(e){var n;e.githubToken?(document.getElementById("login").style.display="none",document.getElementById("logout").style.display="block",document.getElementById("ownerSection").style.display="flex",e.ownerName?(n=e.ownerName,document.getElementById("ownerNameSpan").innerHTML=`<a href="https://www.github.com/${n}" target="_blank" class="highlighted">${n}</a>`,document.getElementById("ownerNameP").style.display="flex",e.selectedRepo?(o(e.selectedRepo,e.ownerName),document.getElementById("postSection").style.display="flex",document.getElementById("selectedRepoP").style.display="flex"):t(e.githubToken)):t(e.githubToken)):(document.getElementById("login").style.display="block",document.getElementById("logout").style.display="none")})),document.getElementById("login").addEventListener("click",(function(){const e=chrome.identity.getRedirectURL(),o=`https://github.com/login/oauth/authorize?client_id=Ov23liS8uJ1LJSioNTPc&redirect_uri=${encodeURIComponent(e)}&scope=repo`;chrome.identity.launchWebAuthFlow({url:o,interactive:!0},(function(o){if(chrome.runtime.lastError)return void console.error(chrome.runtime.lastError.message);const n=new URLSearchParams(new URL(o).search).get("code");fetch("https://github.com/login/oauth/access_token",{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({client_id:"Ov23liS8uJ1LJSioNTPc",client_secret:"904fcc78be315af16780349f2f74d701aeb3fd34",code:n,redirect_uri:e})}).then((e=>e.json())).then((e=>{const o=e.access_token;chrome.storage.local.set({githubToken:o},(function(){document.getElementById("login").style.display="none",document.getElementById("logout").style.display="block",t(o)})),function(e){console.log(e),fetch("https://api.github.com/user",{headers:{Authorization:`token ${e}`}}).then((e=>e.json())).then((e=>{const t=e.login;chrome.storage.local.set({ownerName:t},(function(){console.log("Owner name stored:",t)}))}))}(o)}))}))})),document.getElementById("logout").addEventListener("click",(function(){chrome.storage.local.remove(["githubToken","selectedRepo","ownerName"],(function(){document.getElementById("login").style.display="block",document.getElementById("logout").style.display="none",document.getElementById("ownerSection").style.display="none",document.getElementById("repoSection").style.display="none",document.getElementById("postSection").style.display="none"}));let e=chrome.storage.local.get("githubToken");console.log(e)})),document.getElementById("submitPost").addEventListener("click",(function(){chrome.storage.local.get("githubToken",(function(t){const o=t.githubToken;o?chrome.storage.local.get("selectedRepo",(function(t){const n=t.selectedRepo;if(!n)return void console.error("Selected repository not found");const r=document.getElementById("postInput").value,c=`${function(){const e=new Date;return`${e.getFullYear()}${(e.getMonth()+1).toString().padStart(2,"0")}${e.getDate().toString().padStart(2,"0")}`}()}.md`;chrome.storage.local.get("ownerName",(function(t){const i=t.ownerName;i?function(t,o,n,r,c){function i(t,o,n,r,c,s){fetch(`https://api.github.com/repos/${c}/${o}/contents/${s}/${n}`,{method:"GET",headers:{Authorization:`token ${t}`}}).then((l=>{if(404===l.status)return fetch(`https://api.github.com/repos/${c}/${o}/contents/${s}/${n}`,{method:"PUT",headers:{Authorization:`token ${t}`,"Content-Type":"application/json"},body:JSON.stringify({message:"Create new Markdown file",content:e(r)})});{const e=prompt(`파일 이름 '${n}'이 이미 존재합니다. 새 파일 이름을 입력하세요.`);if(e)return i(t,o,e+".md",r,c,s);throw new Error("파일 이름 입력이 취소되었습니다.")}})).then((e=>{if(201!==e.status)throw new Error("Failed to create file");alert(`파일 ${n}이(가) 생성되었습니다.`),document.getElementById("postInput").value=""})).catch((e=>{"Failed to create file"===e.message&&alert("Error: 커밋에 실패했습니다."),console.error("Error:",e)}))}const s=new Date;!function(t,o,n,r,c,s){fetch(`https://api.github.com/repos/${c}/${o}/contents/${s}`,{method:"GET",headers:{Authorization:`token ${t}`}}).then((l=>404===l.status?function(t,o,n,r,c,s){const l=s.split("/").pop(),a=s.split("/").slice(0,-1).join("/");e(""),fetch(`https://api.github.com/repos/${c}/${o}/contents/${a}`,{method:"GET",headers:{Authorization:`token ${t}`}}).then((e=>e.json())).then((e=>{const n=e.sha;return fetch(`https://api.github.com/repos/${c}/${o}/git/trees`,{method:"POST",headers:{Authorization:`token ${t}`,"Content-Type":"application/json"},body:JSON.stringify({base_tree:n,tree:[{path:l,mode:"040000",type:"tree",content:""}]})})})).then((e=>e.json())).then((e=>{const n=e.sha;return fetch(`https://api.github.com/repos/${c}/${o}/git/commits`,{method:"POST",headers:{Authorization:`token ${t}`,"Content-Type":"application/json"},body:JSON.stringify({message:"Create new folder",tree:n,parents:[]})})})).then((e=>e.json())).then((e=>{const n=e.sha;return fetch(`https://api.github.com/repos/${c}/${o}/git/refs/heads/main`,{method:"PATCH",headers:{Authorization:`token ${t}`,"Content-Type":"application/json"},body:JSON.stringify({sha:n})})})).then((()=>i(t,o,n,r,c,s))).catch((e=>{console.error("Error:",e)}))}(t,o,n,r,c,s):i(t,o,n,r,c,s))).catch((e=>{console.error("Error:",e)}))}(t,o,n,r,c,`${s.getFullYear()}/${String(s.getMonth()+1).padStart(2,"0")}`)}(o,n,c,r,i):console.error("No owner name found")}))})):console.error("GitHub token not found")}))}))}))})();