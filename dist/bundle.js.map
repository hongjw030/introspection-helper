{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack:///./scripts/utils/setTextCode.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./scripts/popup.js"],"sourcesContent":["/*\n * input -> base64 텍스트 변환 함수\n * \n * desc: 한글, 이모지 등 특정 문자는 base64로 인식되지 않는 문제로 encode, decode 함수를 새로 정의함.\n * params: string형 문자열\n * returns: base64로 인코딩된 문자열\n * test: \n */\nexport function encodeBase64(input) {\n  const utf8Bytes = new TextEncoder().encode(input);\n  return btoa(String.fromCharCode(...utf8Bytes));\n}\n\n/*\n * base64 텍스트 -> utf8텍스트 변환 함수\n * \n * desc: 한글, 이모지 등 특정 문자는 base64로 인식되지 않는 문제로 encode, decode 함수를 새로 정의함.\n * params: base64로 인코딩된 문자열\n * returns: 일반 text로 decode한 문자열\n * test: \n */\nexport function decodeBase64(base64) {\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return new TextDecoder().decode(bytes);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { encodeBase64 } from \"./utils/setTextCode\";\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n  chrome.storage.local.get(['githubToken', 'selectedRepo', 'ownerName', 'savedText'], function(result) {\r\n    if (result.githubToken) {\r\n      document.getElementById('login').style.display = 'none';\r\n      document.getElementById('logout').style.display = 'block';\r\n      document.getElementById('ownerSection').style.display = 'flex';\r\n      if (result.ownerName) {\r\n        showOwnerName(result.ownerName);\r\n        document.getElementById('ownerNameP').style.display = 'flex';\r\n        if (result.selectedRepo) {\r\n          showSelectedRepo(result.selectedRepo, result.ownerName);\r\n          document.getElementById('postSection').style.display = 'flex';\r\n          document.getElementById('selectedRepoP').style.display = 'flex';\r\n          if (result.savedText){\r\n            const textarea = document.getElementById('postInput');\r\n            textarea.value = result.savedText;\r\n          }\r\n        } else {\r\n          fetchRepos(result.githubToken);\r\n        }\r\n      } else {\r\n        fetchRepos(result.githubToken);\r\n      }\r\n    } else {\r\n      document.getElementById('login').style.display = 'block';\r\n      document.getElementById('logout').style.display = 'none';\r\n    }\r\n  });\r\n\r\n  document.getElementById('login').addEventListener('click', function() {\r\n    const redirectUri = chrome.identity.getRedirectURL();\r\n    const authUrl = `https://github.com/login/oauth/authorize?client_id=Ov23liS8uJ1LJSioNTPc&redirect_uri=${encodeURIComponent(redirectUri)}&scope=repo`;\r\n\r\n    chrome.identity.launchWebAuthFlow({\r\n      url: authUrl,\r\n      interactive: true\r\n    }, function(redirectUrl) {\r\n      if (chrome.runtime.lastError) {\r\n        console.error(chrome.runtime.lastError.message);\r\n        return;\r\n      }\r\n\r\n      const params = new URLSearchParams(new URL(redirectUrl).search);\r\n      const code = params.get('code');\r\n\r\n      fetch('https://github.com/login/oauth/access_token', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          client_id: 'Ov23liS8uJ1LJSioNTPc',\r\n          client_secret: '904fcc78be315af16780349f2f74d701aeb3fd34',\r\n          code: code,\r\n          redirect_uri: redirectUri\r\n        })\r\n      }).then(response => response.json()).then(data => {\r\n        const token = data.access_token;\r\n        chrome.storage.local.set({ githubToken: token }, function() {\r\n          document.getElementById('login').style.display = 'none';\r\n          document.getElementById('logout').style.display = 'block';\r\n          fetchRepos(token);\r\n        });\r\n        fetchOwnerName(token);\r\n      });\r\n    });\r\n  });\r\n\r\n  document.getElementById('logout').addEventListener('click', function() {\r\n    chrome.storage.local.remove(['githubToken', 'selectedRepo', 'ownerName', 'savedText'], function() {\r\n      document.getElementById('login').style.display = 'block';\r\n      document.getElementById('logout').style.display = 'none';\r\n      document.getElementById('ownerSection').style.display = 'none';\r\n      document.getElementById('repoSection').style.display = 'none';\r\n      document.getElementById('postSection').style.display = 'none';\r\n    });\r\n    let token = chrome.storage.local.get('githubToken');\r\n    console.log(token)\r\n  });\r\n\r\n  document.getElementById('save').addEventListener('click', function(){\r\n    const textarea = document.getElementById('postInput');\r\n    chrome.storage.local.set({savedText: textarea.value});\r\n    alert(\"임시 저장되었습니다! submit 버튼으로 제출하면 자동으로 저장된 내용은 사라집니다.\");\r\n  })\r\n\r\n  document.getElementById('submitPost').addEventListener('click', function() {\r\n    chrome.storage.local.get('githubToken', function(result) {\r\n      const token = result.githubToken;\r\n      if (!token) {\r\n        console.error('GitHub token not found');\r\n        return;\r\n      }\r\n\r\n      chrome.storage.local.get('selectedRepo', function(repoResult) {\r\n        const repoName = repoResult.selectedRepo;\r\n        if (!repoName) {\r\n          console.error('Selected repository not found');\r\n          return;\r\n        }\r\n        const content = document.getElementById('postInput').value;\r\n\r\n        const fileName = `${getCurrentDate()}.md`;\r\n        chrome.storage.local.get('ownerName', function(ownerResult){\r\n          const ownerName = ownerResult.ownerName;\r\n          if (!ownerName){\r\n            console.error('No owner name found');\r\n            return;\r\n          }\r\n          createFileAndCommit(token, repoName, fileName, content, ownerName);\r\n        })\r\n      });\r\n    });\r\n    chrome.storage.local.remove(['savedText'], function() {})\r\n  });\r\n});\r\n\r\nfunction getCurrentDate() {\r\n  const today = new Date();\r\n  const year = today.getFullYear();\r\n  let month = (today.getMonth() + 1).toString().padStart(2, '0'); // 월은 0부터 시작하므로 +1 필요\r\n  let day = today.getDate().toString().padStart(2, '0');\r\n\r\n  return `${year}${month}${day}`;\r\n}\r\n\r\nfunction fetchOwnerName(token) {\r\n  console.log(token);\r\n  fetch('https://api.github.com/user', {\r\n    headers: {\r\n      Authorization: `token ${token}`\r\n    }\r\n  })\r\n  .then(response => response.json())\r\n  .then(userData => {\r\n    const ownerName = userData.login;\r\n    chrome.storage.local.set({ ownerName: ownerName }, function() {\r\n      console.log('Owner name stored:', ownerName);\r\n    });\r\n  });\r\n}\r\n\r\nfunction fetchRepos(token) {\r\n  fetch('https://api.github.com/user/repos', {\r\n    headers: {\r\n      Authorization: `token ${token}`\r\n    }\r\n  }).then(response => response.json()).then(repos => {\r\n    const repoList = document.getElementById('repoList');\r\n    let ownerName = ''\r\n    chrome.storage.local.get(['ownerName'], function(result){\r\n      if (result.ownerName) ownerName = result.ownerName;\r\n    })\r\n    repoList.innerHTML = '';\r\n    if (repos.length > 0){\r\n      repos.forEach(repo => {\r\n        const li = document.createElement('li');\r\n        li.setAttribute('class', \"extension-li\")\r\n        li.textContent = repo.name;\r\n        li.addEventListener('click', function() {\r\n          chrome.storage.local.set({ selectedRepo: repo.name }, function() {\r\n            showSelectedRepo(repo.name, ownerName);\r\n            document.getElementById('postSection').style.display = 'flex';\r\n          });\r\n        });\r\n        repoList.appendChild(li);\r\n      });\r\n    }else{\r\n      repoList.innerHTML = \"Your repository not exist!! Please make your own.\"\r\n    }\r\n    document.getElementById('repoSection').style.display = 'flex';\r\n  });\r\n}\r\n\r\nfunction showSelectedRepo(repoName, ownerName) {\r\n  document.getElementById('repoSection').style.display='none';\r\n  document.getElementById('ownerSection').style.display='flex';\r\n  const selectedRepoSpan = document.getElementById('selectedRepoSpan');\r\n  selectedRepoSpan.innerHTML = `<a href=\"https://www.github.com/${ownerName}/${repoName}\" target=\"_blank\" class=\"highlighted\">${repoName}</a>`;\r\n}\r\n\r\nfunction showOwnerName(ownerName) {\r\n  const ownerNameSpan = document.getElementById('ownerNameSpan');\r\n  ownerNameSpan.innerHTML = `<a href=\"https://www.github.com/${ownerName}\" target=\"_blank\" class=\"highlighted\">${ownerName}</a>`;\r\n}\r\n\r\n\r\nfunction createFileAndCommit(token, repoName, fileName, content, ownerName) {\r\n  let latestCommitSha; // latestCommitSha 변수를 함수 내에서 선언\r\n\r\n  function createFileInFolder(token, repoName, fileName, content, ownerName, folderPath) {\r\n    fetch(`https://api.github.com/repos/${ownerName}/${repoName}/contents/${folderPath}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `token ${token}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.status === 404) {\r\n        // 폴더가 없으므로 생성\r\n        return createFolderAndFile(token, repoName, fileName, content, ownerName, folderPath);\r\n      } else {\r\n        // 폴더가 이미 존재하므로 파일 생성\r\n        return createNewFile(token, repoName, fileName, content, ownerName, folderPath);\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  function createFolderAndFile(token, repoName, fileName, content, ownerName, folderPath) {\r\n    const folderName = folderPath.split('/').pop();\r\n    const parentFolder = folderPath.split('/').slice(0, -1).join('/');\r\n    const folderData = {\r\n      path: folderPath,\r\n      message: 'Create new folder',\r\n      content: encodeBase64(''), // 빈 내용으로 폴더 생성\r\n      branch: 'main' // 변경 필요 시 수정\r\n    };\r\n\r\n    fetch(`https://api.github.com/repos/${ownerName}/${repoName}/contents/${parentFolder}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `token ${token}`\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const baseTreeSha = data.sha;\r\n\r\n      return fetch(`https://api.github.com/repos/${ownerName}/${repoName}/git/trees`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `token ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          base_tree: baseTreeSha,\r\n          tree: [{\r\n            path: folderName,\r\n            mode: '040000', // 디렉터리 모드\r\n            type: 'tree',\r\n            content: '', // 빈 내용\r\n          }]\r\n        })\r\n      });\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const newTreeSha = data.sha;\r\n\r\n      return fetch(`https://api.github.com/repos/${ownerName}/${repoName}/git/commits`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `token ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          message: 'Create new folder',\r\n          tree: newTreeSha,\r\n          parents: []\r\n        })\r\n      });\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      const newCommitSha = data.sha;\r\n\r\n      return fetch(`https://api.github.com/repos/${ownerName}/${repoName}/git/refs/heads/main`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n          Authorization: `token ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          sha: newCommitSha\r\n        })\r\n      });\r\n    })\r\n    .then(() => {\r\n      // 폴더 생성 후 파일 생성\r\n      return createNewFile(token, repoName, fileName, content, ownerName, folderPath);\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  function createNewFile(token, repoName, fileName, content, ownerName, folderPath) {\r\n    fetch(`https://api.github.com/repos/${ownerName}/${repoName}/contents/${folderPath}/${fileName}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        Authorization: `token ${token}`\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.status === 404) {\r\n        // 파일이 존재하지 않으므로 생성\r\n        return fetch(`https://api.github.com/repos/${ownerName}/${repoName}/contents/${folderPath}/${fileName}`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            Authorization: `token ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            message: 'Create new Markdown file',\r\n            content: encodeBase64(content) // encode content to base64\r\n          })\r\n        });\r\n      } else {\r\n        // 파일이 이미 존재하므로 새 파일 이름을 입력받음\r\n        const newFileName = prompt(`파일 이름 '${fileName}'이 이미 존재합니다. 새 파일 이름을 입력하세요.`);\r\n        if (newFileName) {\r\n          // 사용자가 새 파일 이름을 입력한 경우 파일 생성 함수 재귀 호출\r\n          let myFileName = newFileName + \".md\";\r\n          return createNewFile(token, repoName, myFileName, content, ownerName, folderPath);\r\n        } else {\r\n          // 사용자가 입력을 취소한 경우\r\n          throw new Error('파일 이름 입력이 취소되었습니다.');\r\n        }\r\n      }\r\n    })\r\n    .then(response => {\r\n      if (response.status === 201) {\r\n        alert(`파일 ${fileName}이(가) 생성되었습니다.`);\r\n        document.getElementById('postInput').value = '';\r\n      } else {\r\n        throw new Error('Failed to create file');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      if (error.message === 'Failed to create file'){\r\n        alert(\"Error: 커밋에 실패했습니다.\");\r\n      }\r\n      console.error('Error:', error);\r\n    });\r\n  }\r\n\r\n  const currentDate = new Date();\r\n  const year = currentDate.getFullYear();\r\n  const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n  const folderPath = `${year}/${month}`;\r\n\r\n  createFileInFolder(token, repoName, fileName, content, ownerName, folderPath);\r\n}\r\n"],"names":["encodeBase64","input","utf8Bytes","TextEncoder","encode","btoa","String","fromCharCode","apply","_toConsumableArray","decodeBase64","base64","binaryString","atob","bytes","Uint8Array","length","i","charCodeAt","TextDecoder","decode","document","addEventListener","chrome","storage","local","get","result","githubToken","getElementById","style","display","ownerName","showOwnerName","selectedRepo","showSelectedRepo","savedText","textarea","value","fetchRepos","redirectUri","identity","getRedirectURL","authUrl","concat","encodeURIComponent","launchWebAuthFlow","url","interactive","redirectUrl","runtime","lastError","console","error","message","params","URLSearchParams","URL","search","code","fetch","method","headers","body","JSON","stringify","client_id","client_secret","redirect_uri","then","response","json","data","token","access_token","set","fetchOwnerName","remove","log","alert","repoResult","repoName","content","fileName","getCurrentDate","ownerResult","createFileAndCommit","today","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","Authorization","userData","login","repos","repoList","innerHTML","forEach","repo","li","createElement","setAttribute","textContent","name","appendChild","selectedRepoSpan","ownerNameSpan","latestCommitSha","createFileInFolder","folderPath","status","createFolderAndFile","createNewFile","folderName","split","pop","parentFolder","slice","join","folderData","path","branch","baseTreeSha","sha","base_tree","tree","mode","type","newTreeSha","parents","newCommitSha","newFileName","prompt","myFileName","Error","currentDate"],"sourceRoot":""}